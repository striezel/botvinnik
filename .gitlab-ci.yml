docker_image_gcc:
  image: docker:27
  stage: build
  services:
    - docker:27-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/botvinnik/gcc:deb12 . -f Dockerfile_gcc
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/botvinnik/gcc:deb12
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_gcc
      - .gitlab-ci.yml

# Build with GCC / G++.
build_gcc:
  image: registry.gitlab.com/striezel/botvinnik/gcc:deb12
  stage: test
  before_script:
    - apt-get update && apt-get -y upgrade
    - export CC=gcc && export CXX=g++
  script:
    # Build with User-Agent header.
    - mkdir ./build-with-ua
    - cd ./build-with-ua
    - cmake -DUSER_AGENT=ON ../
    - make -j2
    - cd ..
    # Build without User-Agent (default).
    - mkdir ./build
    - cd ./build
    - cmake ../
    - make -j2
    # download Mocktrix as homeserver for tests
    - wget https://gitlab.com/-/project/57986004/uploads/a29d72c738b01f005531592d19d7c69b/Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    - export CHECKSUM=$(sha256sum Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2)
    - echo "Checksum is $CHECKSUM."
    - export CHECKSUM_BITS=$(echo $CHECKSUM | cut -c1-64)
    - if [ "$CHECKSUM_BITS" != "f95a0928d0f8d7b22f3729021d1de12e06812e6ff48b9adcb399be27dcf95833" ] ; then echo "Checksum of downloaded homeserver is wrong."; exit 1; fi
    - tar xf Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    # start homeserver for tests
    - cd Mocktrix-v0.1.0-linux-x64-self-contained
    - ./Mocktrix &
    - while ! netstat -tna | grep LISTEN | grep --silent 5000; do echo Waiting for Kestrel server to start ... ; sleep 5; done
    - cd ..
    # test
    - ctest -V

docker_image_clang:
  image: docker:27
  stage: build
  services:
    - docker:27-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/botvinnik/clang:deb12 . -f Dockerfile_clang
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/botvinnik/clang:deb12
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_clang
      - .gitlab-ci.yml

# Build with Clang / Clang++.
build_clang:
  image: registry.gitlab.com/striezel/botvinnik/clang:deb12
  stage: test
  before_script:
    - apt-get update && apt-get -y upgrade
    - export CC=clang && export CXX=clang++
  script:
    # Build with User-Agent header.
    - mkdir ./build-with-ua
    - cd ./build-with-ua
    - cmake -DUSER_AGENT=ON ../
    - make -j2
    - cd ..
    # Build without User-Agent (default).
    - mkdir ./build
    - cd ./build
    - cmake ../
    - make -j2
    # download Mocktrix as homeserver for tests
    - wget https://gitlab.com/-/project/57986004/uploads/a29d72c738b01f005531592d19d7c69b/Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    - export CHECKSUM=$(sha256sum Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2)
    - echo "Checksum is $CHECKSUM."
    - export CHECKSUM_BITS=$(echo $CHECKSUM | cut -c1-64)
    - if [ "$CHECKSUM_BITS" != "f95a0928d0f8d7b22f3729021d1de12e06812e6ff48b9adcb399be27dcf95833" ] ; then echo "Checksum of downloaded homeserver is wrong."; exit 1; fi
    - tar xf Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    # start homeserver for tests
    - cd Mocktrix-v0.1.0-linux-x64-self-contained
    - ./Mocktrix &
    - while ! netstat -tna | grep LISTEN | grep --silent 5000; do echo Waiting for Kestrel server to start ... ; sleep 5; done
    - cd ..
    # tests
    - ctest -V

docker_image_coverage:
  image: docker:27
  stage: build
  services:
    - docker:27-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/botvinnik/coverage:latest . -f Dockerfile_coverage
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/botvinnik/coverage:latest
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_coverage
      - .gitlab-ci.yml

coverage:
  image: registry.gitlab.com/striezel/botvinnik/coverage:latest
  stage: test
  before_script:
    - apt-get update && apt-get -y upgrade
  script:
    # build
    - export CXX=g++
    - export CC=gcc
    - mkdir build-coverage
    - cd build-coverage
    - cmake -DCODE_COVERAGE=ON ../
    - make -j2
    # download Mocktrix as homeserver for tests
    - wget https://gitlab.com/-/project/57986004/uploads/a29d72c738b01f005531592d19d7c69b/Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    - export CHECKSUM=$(sha256sum Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2)
    - echo "Checksum is $CHECKSUM."
    - export CHECKSUM_BITS=$(echo $CHECKSUM | cut -c1-64)
    - if [ "$CHECKSUM_BITS" != "f95a0928d0f8d7b22f3729021d1de12e06812e6ff48b9adcb399be27dcf95833" ] ; then echo "Checksum of downloaded homeserver is wrong."; exit 1; fi
    - tar xf Mocktrix-v0.1.0-linux-x64-self-contained.tar.bz2
    # start homeserver for tests
    - cd Mocktrix-v0.1.0-linux-x64-self-contained
    - ./Mocktrix &
    - while ! netstat -tna | grep LISTEN | grep --silent 5000; do echo Waiting for Kestrel server to start ... ; sleep 5; done
    - cd ..
    # tests
    - ctest -V
    # collect code coverage data
    - lcov -c --directory . --output-file main_coverage.info
    - lcov --remove main_coverage.info '/usr/*' '*tests/*' '*third-party/*' -o main_coverage_filtered.info
    - genhtml main_coverage_filtered.info --output-directory ../public
  coverage: /^[\t ]*lines\.*:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    paths:
      - public

pages:
  image: debian:12-slim
  stage: deploy
  needs: ["coverage"]
  dependencies:
  - coverage
  script:
    - ls -l
  artifacts:
    paths:
      - public
