name: MSYS2

on: push

jobs:
  msys2_mingw64:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            git
            mingw-w64-x86_64-brotli
            mingw-w64-x86_64-catch
            mingw-w64-x86_64-c-ares
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-curl-winssl
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-libidn2
            mingw-w64-x86_64-make
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-sqlite3
      - name: Build
        run: |
          export MSYSTEM=MINGW64
          export CXX=g++
          export CC=gcc
          cd "$GITHUB_WORKSPACE"
          mkdir build
          cd build
          cmake ../
          cmake --build . -j2
      - name: Download Mocktrix as homeserver for tests
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          curl -L --output Mocktrix-v0.1.0-win-x64-self-contained.tar.bz2 https://github.com/striezel/Mocktrix/releases/download/v0.1.0/Mocktrix-v0.1.0-win-x64-self-contained.tar.bz2
          CHECKSUM=$(sha256sum Mocktrix-v0.1.0-win-x64-self-contained.tar.bz2)
          echo "Checksum calculation: $CHECKSUM"
          CHECKSUM_BITS=$(echo $CHECKSUM | cut -c1-64)
          if [ "$CHECKSUM_BITS" != "c106fa62739460cbd063e612999a77965911a425400c0c9cfac1e0721bc02b7d" ]
          then
            echo "Checksum of downloaded homeserver is wrong."
            exit 1
          fi
          tar xf Mocktrix-v0.1.0-win-x64-self-contained.tar.bz2
      - name: Start Mocktrix homeserver for tests
        shell: bash
        run: |
          cd "$GITHUB_WORKSPACE/Mocktrix-v0.1.0-win-x64-self-contained"
          ./Mocktrix &
          while ! netstat -tna | grep LISTEN | grep --silent 5000
          do
              echo Waiting for Kestrel server to start ...
              sleep 5
          done
      - name: Tests
        run: |
          export MSYSTEM=MINGW64
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
      - name: Build statically linked executable
        run: |
          export MSYSTEM=MINGW64
          export CXX=g++
          export CC=gcc
          cd "$GITHUB_WORKSPACE"
          mkdir build-static
          cd build-static
          cmake ../ -DENABLE_LTO=ON -DENABLE_STATIC_LINKING=ON
          cmake --build . -j2
      - name: Run tests for statically linked build
        run: |
          export MSYSTEM=MINGW64
          cd "$GITHUB_WORKSPACE/build-static"
          ctest -V
      - name: Collect build artifacts
        run: |
          export MSYSTEM=MINGW64
          mkdir -p "$GITHUB_WORKSPACE"/artifacts
          cd "$GITHUB_WORKSPACE"
          # binary file
          cp build-static/src/botvinnik/botvinnik.exe artifacts/
          # license + changelog
          cp LICENSE artifacts/
          cp changelog.md artifacts/
          # documentation files
          cp doc/*.md artifacts/
          # remove build instructions for Windows
          unlink artifacts/msys2-build.md
          # determine version
          VERSION=$(git describe --always)
          echo Version is $VERSION.
          mv artifacts botvinnik-$VERSION
          "C:\Program Files\7-Zip\7z.exe" a -r botvinnik_${VERSION}_win64.zip botvinnik-$VERSION
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: botvinnik_win64
          path: botvinnik_*_win64.zip
          if-no-files-found: error
