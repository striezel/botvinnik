name: Alpine ARM

on: push

jobs:
  alpine_arm:
    runs-on: ubuntu-24.04-arm
    container:
      image: 'alpine:3.22'
      # Needed for Monkey-patch step.
      volumes:
        - /:/host
    steps:
      - name: Install and prepare Git
        run: |
          apk update && apk upgrade
          apk add git
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Monkey-patch Alpine Node.js into runner
        # This step is required because the actions refuse to run on ARM 64
        # while in a container. So the OS ID is changed and the host's Node.js
        # binary is replaced with the one from the container.
        # Works for now, but may fail when Node or other stuff gets updated on
        # the runner's side.
        run: |
          apk add nodejs
          sed -i 's~ID=alpine~ID=nopine~g' /etc/os-release
          cd /host/home/runner/runners/*/externals/
          rm -rf node20/*
          mkdir node20/bin
          ln -s /usr/bin/node node20/bin/node
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install packages
        run: |
          apk update
          apk add catch2 cmake curl-dev fortune g++ git make pkgconf sqlite-dev
      - name: Build
        run: |
          cd "$GITHUB_WORKSPACE"
          mkdir build
          cd build
          export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
          cmake ../
          cmake --build . -j2
      - name: Download Mocktrix as homeserver for tests
        run: |
          cd $GITHUB_WORKSPACE
          apk add bzip2 grep icu-libs tar wget
          wget https://github.com/striezel/Mocktrix/releases/download/v0.1.0/Mocktrix-v0.1.0-linux-musl-arm64-self-contained.tar.bz2
          CHECKSUM=$(sha256sum Mocktrix-v0.1.0-linux-musl-arm64-self-contained.tar.bz2)
          echo "Checksum calculation: $CHECKSUM"
          CHECKSUM_BITS=$(echo $CHECKSUM | cut -c1-64)
          if [ "$CHECKSUM_BITS" != "a9d6153f327c6f38acdef5d3058d530620e3abd3dc26b3ab781584158a8fd283" ]
          then
            echo "Checksum of downloaded homeserver is wrong."
            exit 1
          fi
          tar xf Mocktrix-v0.1.0-linux-musl-arm64-self-contained.tar.bz2
      - name: Start Mocktrix homeserver for tests
        run: |
          cd "$GITHUB_WORKSPACE/Mocktrix-v0.1.0-linux-musl-arm64-self-contained"
          ./Mocktrix &
          while ! netstat -tna | grep LISTEN | grep --silent 5000
          do
              echo Waiting for Kestrel server to start ...
              sleep 5
          done
      - name: Run tests
        run: |
          cd "$GITHUB_WORKSPACE/build"
          ctest -V
      - name: Install statically linked libraries
        run: |
          apk add brotli-static c-ares-dev curl-static libidn2-static
          apk add libpsl-static libunistring-static nghttp2-static
          apk add openssl-libs-static sqlite-static zlib-static zstd-static
      - name: Build statically linked executable
        run: |
          cd "$GITHUB_WORKSPACE"
          mkdir build-static
          cd build-static
          export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
          cmake ../ -DENABLE_LTO=ON -DENABLE_STATIC_LINKING=ON
          cmake --build . -j2
      - name: Run tests for statically linked build
        run: |
          cd "$GITHUB_WORKSPACE/build-static"
          ctest -V
      - name: Collect build artifacts
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/artifacts
          cd "$GITHUB_WORKSPACE"
          # binary file
          cp build-static/src/botvinnik/botvinnik artifacts/
          # license + changelog
          cp LICENSE artifacts/
          cp changelog.md artifacts/
          # documentation files
          cp doc/*.md artifacts/
          # remove build instructions for Windows
          unlink artifacts/msys2-build.md
          # determine version
          VERSION=$(git describe --always)
          echo Version is $VERSION.
          mv artifacts botvinnik-$VERSION
          tar czf botvinnik_${VERSION}_linux-arm64-generic.tar.gz botvinnik-$VERSION
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: botvinnik_linux-arm64-generic
          path: botvinnik_*_linux-arm64-generic.tar.gz
          if-no-files-found: error
